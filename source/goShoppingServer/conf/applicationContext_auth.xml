<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
         
    <context:component-scan base-package="com.baiku" />
  	
  	<context:annotation-config />
           
	<bean id="redisSource" class="com.shopping.server.auth.datasource.RedisDataSource">
		<property name="ip" value="127.0.0.1" />
		<property name="port" value="6379" />
		<property name="conOuttime" value="6000" />
		<property name="database" value="0" />
		
		<property name="config">
			<ref bean="jedisPoolConfig" />
		</property>
	</bean>
	<bean id="jedisPoolConfig" class="com.baiku.contacts.auth.redis.clients.jedis.JedisPoolConfig">
		<!-- <property name="maxIdle" value="8" /> -->
		<!-- Default behaviour, block the caller until a resource becomes available -->
		<property name="whenExhaustedAction" value="1"/>
		<!-- Maximum active connections to Redis instance -->
		<property name="maxActive" value="10" />
		<!-- Number of connections to Redis that just sit there and do nothing -->
		<property name="maxIdle" value="5" />
		<!-- Minimum number of idle connections to Redis - these can be seen as always open and ready to serve -->
		<property name="minIdle" value="1" />
		<!-- Tests whether connection is dead when connection retrieval method is called -->
		<property name="testOnBorrow" value="true" />
		<!-- Tests whether connection is dead when returning a connection to the pool -->
<!-- 		<property name="testOnReturn" value="true" /> -->
		<!-- Tests whether connections are dead during idle periods -->
<!-- 		<property name="testWhileIdle" value="true" /> -->
		<!-- Maximum number of connections to test in each idle check -->
<!-- 		<property name="numTestsPerEvictionRun" value="10" /> -->
		<!-- Idle connection checking period -->
<!-- 		<property name="timeBetweenEvictionRunsMillis" value="60000" /> -->
		<!-- Maximum time, in milliseconds, to wait for a resource when exausted action is set to WHEN_EXAUSTED_BLOCK -->
<!-- 		<property name="maxWait" value="3000" /> -->
	</bean>
	<bean id="jedisTemplate" 
		class="com.shopping.server.auth.datasource.JedisTemplate" init-method="init">
		<property name="redisDataSource">
			<ref bean="redisSource" />
		</property>
	</bean>
	
	<bean id="authClientBiz"
		class="com.shopping.server.auth.biz.impl.AuthClientBizImpl"
		autowire="byName" />
		
	<bean id="authOperation"
		class="com.shopping.server.auth.biz.impl.AuthOperationImpl"
		autowire="byName" />
		
	<bean id="authClientDao"
		class="ccom.shopping.server.auth.dao.impl.AuthClientDaoImpl"
		autowire="byName"/>
	
</beans>